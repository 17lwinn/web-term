#!/usr/bin/env node

// ;
var Lien = require("lien")
  , WebTerm = require(__dirname + "/../lib")
  , Pty = require("pty.js")
  , SocketIO = require("socket.io")
  , Logger = require("bug-killer")
  , Clp = require("clp")
  , Package = require("../package")
  ;


// Logger config
Logger.config.logLevel = 4;

// Create options and add them
var portOption = new Clp.Option(["p", "port"], "The web term server port.", "port", 9000)
  , daemonOption = new Clp.Option(["d", "daemon"], "Start web term as backgroudn process.")
  , cwdOption = new Clp.Option(["c", "cwd"], "The path to the web terminal current working directory.", "path")
  , openOption = new Clp.Option(["o", "open"], "If provided, the web term will be automatically opened in the default browser.")
  , parser = new Clp({
        name: "Web Term"
      , version: "v1.0"
      , process: true
      , exe: Package.name
      , examples: [
            "web-term # Default behavior"
          , "web-term -p 8080 # start on localhost:8080"
          , "web-term -d # daemonize"
          , "web-term -c path/to/some/dir"
          , "web-term -o # Opens the web-term in browser"
        ]
      , docs_url: "https://github.com/IonicaBizau/web-term"
    }, [portOption, daemonOption])
  ;

// Init the server
var app = new Lien({
    host: "localhost"
  , port: 9000
  , root: __dirname + "/public"
});

app.page.add("/", function (lien) {
    lien.file("index.html");
});

// Init Socket.IO
app.io = SocketIO.listen(app._server, {
    log: false
});

// Handle connections
app.io.sockets.on("connection", function(socket) {
    var req = socket.handshake;
    var user = req.user;

    socket.on("create", function(cols, rows, callback) {
        WebTerm.create({
            cols: cols
          , rows: rows
          , socket: socket
        }, callback);
    });

    socket.on("data", function(data) {
        WebTerm.data(data);
    });

    socket.on("kill", function() {
        WebTerm.kill();
    });

    socket.on("resize", function(cols, rows) {
        WebTerm.resize(cols, rows);
    });

    socket.on("disconnect", function() {
        WebTerm.kill();
    });

    socket.on("request paste", function(callback) {
        WebTerm.paste(callback);
    });
});

Logger.log("Terminal available at: localhost:9000", "info");
